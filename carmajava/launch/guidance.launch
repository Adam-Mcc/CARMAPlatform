<?xml version="1.0"?>
<!--
  Copyright (C) 2018-2019 LEIDOS.

  Licensed under the Apache License, Version 2.0 (the "License"); you may not
  use this file except in compliance with the License. You may obtain a copy of
  the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  License for the specific language governing permissions and limitations under
  the License.
-->
<!--
	Launch file for launching the nodes in the CARMA guidance stack
-->
<launch>
  <arg name="PARAM_DIR" default="$(find carma)/launch/params" doc="Directory of yaml parameter files"/>

  <!-- Debug -->
  <!-- Set to true to enable debugging on the specified node -->
  <arg name="debug_node" default="" doc="Set to the java node base name to enable debugging on that node"/>
  <arg name="debug_guidance" value="$(eval arg('debug_node') == 'guidance')"/>

  <arg name="MSG_NS" default="/message" doc="Namespace of nodes in message package"/>
  <arg name="TF_NS" default="/transform" doc="Namespace of nodes in transform server package"/>
  <arg name="INTR_NS" default="/hardware_interface" doc="Namespace of nodes hardware interface stack"/>
  <arg name="UI_NS" default="/ui" doc="Namespace of parameters used by the ui and rosbridge"/>
  
  <!-- Remap topics from external packages -->
  <remap from="bsm" to="$(arg MSG_NS)/outgoing_bsm"/>
  <remap from="incoming_map" to="$(arg MSG_NS)/incoming_map"/>
  <remap from="incoming_spat" to="$(arg MSG_NS)/incoming_spat"/>
  <remap from="outgoing_mobility_operation" to="$(arg MSG_NS)/outgoing_mobility_operation"/>
  <remap from="outgoing_mobility_request" to="$(arg MSG_NS)/outgoing_mobility_request"/>
  <remap from="outgoing_mobility_response" to="$(arg MSG_NS)/outgoing_mobility_response"/>

  <remap from="heading" to="$(arg INTR_NS)/gnss/heading_raw"/>
  <remap from="nav_sat_fix" to="$(arg INTR_NS)/gnss/fix_raw"/>
  <remap from="velocity" to="$(arg INTR_NS)/gnss/vel_raw"/>
  
  <remap from="/republish/cmd_lateral" to="$(arg INTR_NS)/controller/cmd_lateral"/>
  <remap from="/republish/cmd_longitudinal_effort" to="$(arg INTR_NS)/controller/cmd_longitudinal_effort"/>
  <remap from="/republish/cmd_speed" to="$(arg INTR_NS)/controller/cmd_speed"/>
  <remap from="robot_enabled" to="$(arg INTR_NS)/controller/robot_enabled"/>
  <remap from="/controller/cmd_lateral" to="$(arg INTR_NS)/controller/cmd_lateral"/>
  <remap from="/controller/cmd_longitudinal_effort" to="$(arg INTR_NS)/controller/cmd_longitudinal_effort"/>
  <remap from="/controller/cmd_speed" to="$(arg INTR_NS)/controller/cmd_speed"/>
  <remap from="enable_robotic" to="$(arg INTR_NS)/controller/enable_robotic"/>

  <remap from="ui_instructions" to="$(arg UI_NS)/ui_instructions"/>

  <remap from="get_transform" to="$(arg TF_NS)/get_transform"/>

  <!-- TODO Look into if there is a better way for handling global prameters -->
  <remap from="~vehicle_id" to="/vehicle_id"/> 
  <remap from="vehicle_length" to="/vehicle_length"/> 
  <remap from="vehicle_width" to="/vehicle_width"/> 

  <remap from="system_alert" to="/system_alert"/>

  <!-- Guidance Main Node -->
  <!-- <node pkg="carma" type="guidance" name="guidance_main" args="gov.dot.fhwa.saxton.carma.guidance.GuidanceMain">

    <env if="$(arg debug_guidance)" name="GUIDANCE_OPTS" value="$(env JVM_DEBUG_OPTS)"/>

    <rosparam command="load" file="$(arg PARAM_DIR)/GuidanceParams.yaml"/>
    <rosparam command="load" file="$(arg PARAM_DIR)/ArbitratorParams.yaml"/>
    <rosparam command="load" file="$(arg PARAM_DIR)/SpeedHarmParams.yaml"/>
    <rosparam command="load" file="$(arg PARAM_DIR)/PlatooningParams.yaml"/>
    <rosparam command="load" file="$(arg PARAM_DIR)/CooperativeMergeParams.yaml"/>
    <rosparam command="load" file="$(arg PARAM_DIR)/SignalParams.yaml"/>

  </node> -->

  <!-- Substitute UI integration node for Guidance Main -->
  <include file="$(find ui_integration)/launch/ui_integration.launch"/>

  <!-- TODO Route Generation node (route planning) will go here or above guidance node -->

  <!-- Guidance Command Repeater Node TODO remapping-->
  <include file="$(find guidance_command_repeater)/launch/guidance_command_repeater.launch"/>
</launch>
