<?xml version="1.0"?>
<!--
  Copyright (C) 2018-2019 LEIDOS.

  Licensed under the Apache License, Version 2.0 (the "License"); you may not
  use this file except in compliance with the License. You may obtain a copy of
  the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  License for the specific language governing permissions and limitations under
  the License.
-->
<!--
	drivers.launch

This file is used for vehicle configurations. The arguments from carma.launch should pass on to carma_src.launch, which should then pass those arguments to this file. The arguments in the carma.launch file will override all of the default values of the arguments being passed, so you should be making changes to the carma.launch to configure it to your vehicle. 

If not using simulated drivers they are activated if the respective mock arguments being passed in are false. These lines below activate the respective actual driver if the respective mock argument being passed is false.

-->

<launch>

  <!-- Directory of Parameter Files -->
  <arg name="LAUNCH_DIR" default="$(find carma)/launch" doc="The path of the launch file directory"/>
  <arg name="PARAM_DIR" default="$(arg LAUNCH_DIR)/params" doc="Directory of yaml parameter files"/>

  <!-- Simulated Driver Arguments -->
  <!-- Directory of Simulation Files -->
  <arg name="DATA_DIR" default="$(find carma)/mock_drivers/src/test/data" doc="Directory of driver simulation data files"/>
  
  <!-- Data Files -->
  <arg name="can_data_file" value="$(arg DATA_DIR)/can.csv"/>
  <arg name="dsrc_data_file" value="$(arg DATA_DIR)/dsrc.csv"/>
  <arg name="srx_controller_data_file" value="$(arg DATA_DIR)/srx_controller.csv"/>
  <arg name="pinpoint_data_file" value="$(arg DATA_DIR)/pinpoint_stationary.csv"/>
  <arg name="radar_data_file" value="$(arg DATA_DIR)/radar.csv"/>
  <arg name="cellular_data_file" value="$(arg DATA_DIR)/dsrc.csv"/>

  <!-- Debug -->
  <!-- Set to true to enable debugging on the specified node -->
  <arg name="debug_node" default="" doc="Set to the java node base name to enable debugging on that node"/>

  <!-- Simulation Usage -->
  <arg name="mock_drivers"        default="lateral_controller" doc="List of driver node types which will be launched as mock drivers"/>

  <arg name="mock_can"                  value="$(eval 'can' in arg('mock_drivers').split())"/>
  <arg name="mock_comms"                 value="$(eval 'comms' in arg('mock_drivers').split())"/>
  <arg name="mock_lon_ontroller"       value="$(eval 'lon_controller' in arg('mock_drivers').split())"/>
  <arg name="mock_gnss"             value="$(eval 'gnss' in arg('mock_drivers').split())"/>
  <arg name="mock_radar"                value="$(eval 'radar' in arg('mock_drivers').split())"/>
  <arg name="mock_lateral_controller"   value="$(eval 'lateral_controller' in arg('mock_drivers').split())"/>

  <param name="OutputA" value="$(eval arg('mock_drivers').split())"/>
  <param name="OutputB" value="$(eval 'gnss' in arg('mock_drivers').split())"/>

  <!-- Simulated DSRC Driver Node -->
  <include if="$(arg mock_comms)" file="$(arg LAUNCH_DIR)/mock_driver.launch">
    <arg name="node_name"        value="dsrc"/>
    <arg name="simulated_driver" value="dsrc"/>
    <arg name="data_file"   value="$(arg dsrc_data_file)"/>
    <arg name="debug_driver"     value="$(eval arg('debug_node') == 'dsrc')"/>
  </include>

  <!-- Simulated PinPoint Driver Node -->
  <include if="$(arg mock_gnss)" file="$(arg LAUNCH_DIR)/mock_driver.launch">
    <arg name="node_name"        value="pin_point_application"/>
    <arg name="simulated_driver" value="pinpoint"/>
    <arg name="data_file"   value="$(arg pinpoint_data_file)"/>
    <arg name="debug_driver"     value="$(eval arg('debug_node') == 'pin_point_application')"/>
  </include>

  <!-- Simulated CAN Driver Node -->
  <include if="$(arg mock_can)" file="$(arg LAUNCH_DIR)/mock_driver.launch">
    <arg name="node_name"        value="srx_can"/>
    <arg name="simulated_driver" value="can"/>
    <arg name="data_file"   value="$(arg can_data_file)"/>
    <arg name="debug_driver"     value="$(eval arg('debug_node') == 'srx_can')"/>
  </include>

  <!-- Simulated SRX Controller Driver Node -->
  <include if="$(arg mock_lon_ontroller)" file="$(arg LAUNCH_DIR)/mock_driver.launch">
    <arg name="node_name"        value="srx_controller"/>
    <arg name="simulated_driver" value="srx_controller"/>
    <arg name="data_file"   value="$(arg srx_controller_data_file)"/>
    <arg name="debug_driver"     value="$(eval arg('debug_node') == 'srx_controller')"/>
  </include>

  <!-- Simulated Radar Driver Node -->
  <include if="$(arg mock_radar)" file="$(arg LAUNCH_DIR)/mock_driver.launch">
    <arg name="node_name"        value="srx_objects"/>
    <arg name="simulated_driver" value="radar"/>
    <arg name="data_file"   value="$(arg radar_data_file)"/>
    <arg name="debug_driver"     value="$(eval arg('debug_node') == 'srx_objects')"/>
  </include>
	
  <!--Lateral Controller Driver Node -->
  <include file="$(arg LAUNCH_DIR)/lateral_controller_driver.launch">
    <arg name="debug_node" value="$(eval arg('debug_node') == 'lateral_controller')"/>
    <arg name="PARAM_DIR"   value="$(arg PARAM_DIR)"/>
  </include>

</launch>
