<?xml version="1.0"?>
<!--
  Copyright (C) 2017 LEIDOS.

  Licensed under the Apache License, Version 2.0 (the "License"); you may not
  use this file except in compliance with the License. You may obtain a copy of
  the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  License for the specific language governing permissions and limitations under
  the License.
-->
<!--
	saxton_cav.launch

  A the ros launch file for the STOL CAV Prototype ROS Network.
  Launches all the needed ros nodes and sets up the parameter server.
  Also sets up all static transforms used by tf2 within the system.

  Use:
  First delete the generated build/scripts folder in all java packages.
  roslaunch carma saxton_cav.launch
  After using source devel/setup.bash from workspace root.

  If using simulated drivers they are activated using ros arguments as shown below.
  roslaunch carma saxton_cav.launch mock_can:=true can_data_file:=/path/to/file.csv
-->
<launch>
  <!-- Constants -->
  <!-- Directory of Parameter Files -->
  <arg name="CARMA_DIR" default="$(find carma)" doc="The path of the package directory"/>
  <arg name="PARAM_DIR" default="$(arg CARMA_DIR)/launch/params" doc="Directory of yaml parameter files"/>
  <!-- Path to Unified Robot Description Format URDF file for loading static transforms -->
  <arg name="URDF_FILE" default="$(arg CARMA_DIR)/launch/urdf/saxton_cav_green_srx.urdf" doc="Path to the vehicle's URDF file"/>
  <!-- Simulated Driver Arguments -->
  <!-- Directory of Simulation Files -->
  <arg name="DATA_DIR" default="$(arg CARMA_DIR)/mock_drivers/src/test/data" doc="Directory of driver simulation data files"/>
  <!-- Simulation Usage -->
  <arg name="mock_can"            default="false" doc="True if using a simulated can driver"/>
  <arg name="mock_dsrc"          default="false" doc="True if using a simulated dsrc driver"/>
  <arg name="mock_srx_controller" default="false" doc="True if using a simulated srx controller driver"/>
  <arg name="mock_pinpoint"       default="false" doc="True if using a simulated pinpoint driver"/>
  <arg name="mock_radar"          default="false" doc="True if using a simulated radar driver"/>
  <arg name="mock_cellular"       default="false" doc="True if using a simulated cellular driver"/>

  <!-- Data Files -->
  <arg name="can_data_file"            default="$(arg DATA_DIR)/can.csv" doc="Path for can simulation data"/>
  <arg name="dsrc_data_file"          default="$(arg DATA_DIR)/dsrc.csv" doc="Path for dsrc simulation data"/>
  <arg name="srx_controller_data_file" default="$(arg DATA_DIR)/srx_controller.csv" doc="Path for srx controller simulation data"/>
  <arg name="pinpoint_data_file"       default="$(arg DATA_DIR)/pinpoint_stationary.csv" doc="Path for pinpoint simulation data"/>
  <arg name="radar_data_file"          default="$(arg DATA_DIR)/radar.csv" doc="Path for radar simulation data"/>
  <arg name="cellular_data_file"       default="$(arg DATA_DIR)/dsrc.csv" doc="Path cellular can simulation data"/>

  <!-- Debug -->
  <!-- JVM Debug arguments -->
  <arg name="JVM_DEBUG_OPTS"    default="-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005" doc="Start rosjava node with these JVM arguments for debugging"/>
  <!-- Set to true to enable debugging on the specified node -->
  <arg name="debug_roadway_mgr" default="false" doc="Set true to enable debugging on the Roadway Manager node"/>
  <arg name="debug_transform_svr"   default="false" doc="Set true to enable debugging on the Transform Server node"/>
  <arg name="debug_guidance"        default="false" doc="Set true to enable debugging on the Guidance Main node"/>
  <arg name="debug_interface_mgr"   default="false" doc="Set true to enable debugging on the Interface Manager node"/>
  <arg name="debug_msg_consumer"    default="false" doc="Set true to enable debugging on the Message Consumer node"/>
  <arg name="debug_negotiator"      default="false" doc="Set true to enable debugging on the Negotiator node"/>
  <arg name="debug_route"           default="false" doc="Set true to enable debugging on the Route node"/>
  <arg name="debug_mock_pinpoint"   default="false" doc="Set true to enable debugging on the Mock Pinpoint Driver"/>
  <arg name="debug_mock_srx_controller" default="false" doc="Set true to enable debugging on the Mock SRX Controller Driver"/>
  <arg name="debug_mock_can"        default="false" doc="Set true to enable debugging on the Mock CAN Driver"/>
  <arg name="debug_mock_dsrc"      default="false" doc="Set true to enable debugging on the Mock dsrc Driver"/>
  <arg name="debug_mock_radar"      default="false" doc="Set true to enable debugging on the Mock Radar Driver"/>
  <arg name="debug_lateral_controller" default="false" doc="Set true to enable debugging on the Lateral Control Driver"/>

  <!-- ROS Namespaces -->
  <arg name="TOP_NS"    default="saxton_cav" doc="CAV Prototype system namespace"/>
  <arg name="GUIDE_NS"  default="guidance" doc="Namespace of nodes in guidance package"/>
  <arg name="NEGTR_NS"  default="negotiator" doc="Namespace of nodes in negotiator package"/>
  <arg name="MSG_NS"    default="message" doc="Namespace of nodes in message package"/>
  <arg name="SF_NS"     default="sensor_fusion" doc="Namespace of nodes in sensor fusion package"/>
  <arg name="RD_NS"     default="roadway" doc="Namespace of nodes in roadway package"/>
  <arg name="RT_NS"     default="route" doc="Namespace of nodes in route package"/>
  <arg name="DRIVER_NS" default="drivers" doc="Namespace of nodes in drivers package"/>
  <arg name="INTR_NS"   default="interface_manager" doc="Namespace of nodes in interface manager package"/>
  <arg name="UI_NS"   default="ui" doc="Namespace of parameters used by the ui and rosbridge"/>

  <!-- Launch Nodes -->
  <group ns="$(arg TOP_NS)">

    <!-- Set package path for use with relative file paths -->
    <param name="package_path" value="$(arg CARMA_DIR)"/>

    <!-- Load Vehicle Characteristics -->
    <rosparam command="load" file="$(arg PARAM_DIR)/HostVehicleParams.yaml"/>

    <!-- TF2 Setup Initial Static Transforms -->
    <!-- Vehicle Transforms -->
    <param name="robot_description" textfile="$(arg URDF_FILE)"/>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

    <!-- Roadway Package -->
    <group ns="$(arg RD_NS)">

      <!-- Roadway Manager Node -->
      <node pkg="carma" type="roadway" name="roadway_manager"
            args="gov.dot.fhwa.saxton.carma.roadway.RoadwayManager">

        <env if="$(arg debug_roadway_mgr)" name="ROADWAY_OPTS" value="$(arg JVM_DEBUG_OPTS)"/>

        <rosparam command="load" file="$(arg PARAM_DIR)/RoadwayManagerParams.yaml"/>

        <remap from="system_alert"
               to="/$(arg TOP_NS)/system_alert"/>
        <remap from="map"
               to="/$(arg TOP_NS)/$(arg MSG_NS)/map"/>
        <remap from="heading"
               to="/$(arg TOP_NS)/$(arg SF_NS)/filtered/heading"/>
        <remap from="nav_sat_fix"
               to="/$(arg TOP_NS)/$(arg SF_NS)/filtered/nav_sat_fix"/>
        <remap from="odometry"
               to="/$(arg TOP_NS)/$(arg SF_NS)/filtered/odometry"/>
        <remap from="objects"
               to="/$(arg TOP_NS)/$(arg SF_NS)/filtered/tracked_objects"/>
        <remap from="velocity"
               to="/$(arg TOP_NS)/$(arg SF_NS)/filtered/velocity"/>
        <remap from="get_transform"
               to="/$(arg TOP_NS)/$(arg RD_NS)/get_transform"/>
        <remap from="route_state"
              to="/$(arg TOP_NS)/$(arg RT_NS)/route_state"/>
        <remap from="route"
              to="/$(arg TOP_NS)/$(arg RT_NS)/route"/>
      </node>

      <!-- Transform Server Node -->
      <node pkg="carma_transform_server" type="carma_transform_server_node" name="transform_server">

        <env if="$(arg debug_transform_svr)" name="ROADWAY_OPTS" value="$(arg JVM_DEBUG_OPTS)"/>

        <remap from="system_alert"
               to="/$(arg TOP_NS)/system_alert"/>
      </node>
    </group>
  </group>
</launch>
